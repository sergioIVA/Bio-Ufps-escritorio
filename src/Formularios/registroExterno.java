/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Formularios;

import Negocio.Huella;
import Negocio.Negocio;
import com.digitalpersona.onetouch.DPFPGlobal;
import com.digitalpersona.onetouch.DPFPSample;
import com.digitalpersona.onetouch.capture.DPFPCapture;
import com.digitalpersona.onetouch.capture.event.DPFPDataAdapter;
import com.digitalpersona.onetouch.capture.event.DPFPDataEvent;
import com.digitalpersona.onetouch.capture.event.DPFPErrorAdapter;
import com.digitalpersona.onetouch.capture.event.DPFPErrorEvent;
import com.digitalpersona.onetouch.capture.event.DPFPReaderStatusAdapter;
import com.digitalpersona.onetouch.capture.event.DPFPReaderStatusEvent;
import com.digitalpersona.onetouch.capture.event.DPFPSensorAdapter;
import com.digitalpersona.onetouch.capture.event.DPFPSensorEvent;
import dto.Usuario;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.awt.image.RenderedImage;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;

/**
 *
 * @author sergio
 */
public class registroExterno extends javax.swing.JFrame  implements comunJFrame{
    private DPFPCapture lector = DPFPGlobal.getCaptureFactory().createCapture();
    private String mensaje;
    private byte[] actual;
    private boolean ejecucion=false;
    registroUsuarios r;
    private InputStream foto;
    private  BufferedImage f;
   
    
    
    
    public registroExterno(registroUsuarios r) {
        initComponents();
         this.setTitle("Registrar Externo");
        this.setLocationRelativeTo(null);
        Image i=r.getMyAsistencia().getImagenHuella();
                        if(i!=null){
        this.DibujarHuella(i);
                        }
        actual=r.getMyAsistencia().getActual();
        this.r = r;
        //this.setSize(344,530);
        this.setSize(318,550);
    }

    
     public void DibujarHuella(Image image){
        this.imagen.setIcon(new ImageIcon(
                image.getScaledInstance(this.imagen.getWidth(),this.imagen.getHeight(), image.SCALE_DEFAULT)
        ));
        repaint();
    }
    

      
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtCedula = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtTelefono = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtCargo = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtCorreo = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        imagen = new javax.swing.JLabel();
        ingresar = new javax.swing.JButton();
        Externo = new javax.swing.JLabel();
        cancelar = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("EXTERNO");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 0, -1, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Nombre :");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 200, -1, -1));
        getContentPane().add(txtNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 200, 200, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Cedula :");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 230, -1, 20));

        txtCedula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCedulaActionPerformed(evt);
            }
        });
        getContentPane().add(txtCedula, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 230, 200, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("Telefono:");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 320, -1, -1));
        getContentPane().add(txtTelefono, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 320, 200, -1));
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(36, 390, -1, -1));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setText("Cargo:");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 260, -1, -1));
        getContentPane().add(txtCargo, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 260, 200, -1));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setText("Correo:");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 290, -1, -1));
        getContentPane().add(txtCorreo, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 290, 200, -1));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel8.setText("huella :");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(42, 390, -1, -1));

        imagen.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        getContentPane().add(imagen, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 350, 130, 110));

        ingresar.setText("Ingresar");
        ingresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ingresarActionPerformed(evt);
            }
        });
        getContentPane().add(ingresar, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 470, -1, -1));

        Externo.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        Externo.setText("                  SIN FOTO");
        Externo.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(Externo, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 20, 170, 140));

        cancelar.setText("Cancelar");
        cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarActionPerformed(evt);
            }
        });
        getContentPane().add(cancelar, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 470, -1, -1));

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/camara2.png"))); // NOI18N
        jButton1.setText("Tomar");
        jButton1.setToolTipText("Toma la foto aca !");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 160, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtCedulaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCedulaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCedulaActionPerformed

    private void ingresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ingresarActionPerformed
          
    String cedula=this.txtCedula.getText();
    String nombre=this.txtNombre.getText();
    String telefono=this.txtTelefono.getText();
    String cargo=this.txtCargo.getText();
    String correo=this.txtCorreo.getText();
    byte[] huella=null;
        
        if(cedula.isEmpty()||nombre.isEmpty()||telefono.isEmpty()||cargo.isEmpty()||correo.isEmpty()){      
         JOptionPane.showMessageDialog(null,"Debe llenar todos los campos ");
         return;
                  }
        
         //cedula no mas de 10 digitos
        if (cedula.length() > 10) {
            JOptionPane.showMessageDialog(null, "¡Solo puede tener 10 digitos la cedula!");
            return;
        }
        //telefono  no mas de 10 digitos 
        if (telefono.length() > 10) {
            JOptionPane.showMessageDialog(null, "¡Limite de longitud del telefono hasta 10!");
            return;
        }
        
                         if(this.actual!=null){
                         huella=actual;
                         }
   Usuario usu=new Usuario(cedula,null,huella,nombre,"Externo",null,correo,cargo,telefono,foto);
   
        try {
            if(this.r.getMyAsistencia().getMyNegocio().registrarUsuario(usu)){
                JOptionPane.showMessageDialog(null,"Se registro Externo");
                this.setVisible(false);
                        if(f!=null){
             ByteArrayOutputStream out = new ByteArrayOutputStream();
             ImageIO.write(f,"jpg",new File("test.png"));
             ImageIO.write((RenderedImage) f,"jpg", out);
             InputStream in = new ByteArrayInputStream(out.toByteArray());
             usu.setFoto(in);
                                   }
                
                Asistencia form=new Asistencia(r.getMyAsistencia(),usu);
                form.setVisible(true);
              
            }
            else{
                JOptionPane.showMessageDialog(null,"No registro Externo");
            }
        } catch (SQLException ex) {
           JOptionPane.showMessageDialog(null,ex.getMessage());
        } catch (IOException ex) {
            Logger.getLogger(registroExterno.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_ingresarActionPerformed

    private void cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarActionPerformed
       this.setVisible(false);
       this.r.setVisible(true);
    }//GEN-LAST:event_cancelarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Webcam obj=new Webcam(this);
    }//GEN-LAST:event_jButton1ActionPerformed


    
    /**
     * @param args the command line arguments
     */
  

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Externo;
    private javax.swing.JButton cancelar;
    private javax.swing.JLabel imagen;
    private javax.swing.JButton ingresar;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JTextField txtCargo;
    private javax.swing.JTextField txtCedula;
    private javax.swing.JTextField txtCorreo;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtTelefono;
    // End of variables declaration//GEN-END:variables

    @Override
    public void incluirFoto(BufferedImage image) throws IOException {
    this.f=image;
     ByteArrayOutputStream out = new ByteArrayOutputStream();
     ImageIO.write(image,"jpg",new File("test.png"));
     ImageIO.write((RenderedImage) image,"jpg", out);
     InputStream in = new ByteArrayInputStream(out.toByteArray());
      this.foto=in;
    }

    @Override
    public void incluirImagen(InputStream f) {
        try {
          Image I=  ImageIO.read(f);
          Icon icono=new ImageIcon(I.getScaledInstance(Externo.getWidth(),Externo.getHeight(),Image.SCALE_DEFAULT));
          this.Externo.setIcon(icono);
        } catch (IOException ex) {
            Logger.getLogger(registroEstudiante.class.getName()).log(Level.SEVERE, null, ex);
        } 
    }

  
    
    }

